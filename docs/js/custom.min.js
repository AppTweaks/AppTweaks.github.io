/*==============================================================================

          		        Script development started
          
                   	  Script by www.cpacodex.com
             
================================================================================

................................................................................
  
                     ** App Store Premium Landing Page **

===============================[ Variables ]===================================*/

  var expandingAnimationTiming  =                                            400;
  var collapsingAnimationTiming =                                            200;                

//===========================[ Global Script ]===================================

//------------------------------[ Document ]-------------------------------------

$( document ).ready( function( ) {

  //---------------------------[ Extend jQuery ]---------------------------------

  $.fn.extend({

    animateCss: function( animationName, callback ) {

      var animationEnd = ( function( el ) {

        var animations = {

          animation: 'animationend',
          OAnimation: 'oAnimationEnd',
          MozAnimation: 'mozAnimationEnd',
          WebkitAnimation: 'webkitAnimationEnd',

        };

        for( var t in animations ) {

          if ( el.style[ t ] !== undefined ) {

            return animations[ t ];

          }

        }

      } )( document.createElement( 'div' ) );

      this.addClass( 'animated ' + animationName ).one( animationEnd, function() {

        $( this ).removeClass( 'animated ' + animationName );

        if ( typeof callback === 'function' ) callback();

      });

      return this;

    },

  });

  //--------------------------[ Web Page Arsenal ]----------------------------------

  /* Extends jQuery animate easing */
  $.easing = Object.assign({}, $.easing, {
    easeOutBack: function(x, t, b, c, d, s) {
      if (s == undefined) s = 1.70158;
      return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;
    }
  });

  /* Function to expand cards */
  function expandElement(elementToExpand) {
    // Adds class 'open' to help with styling
    elementToExpand.parents(".card").addClass("open");

    // Prevents 'body' scroll
    $("body").addClass("lock");

    // freeze the current scroll position of the background page expand-wrapper
    var elementOffset = $(".list-wrapper").offset();
    var elementScrollTop = $("body").scrollTop();
    var netOffset = elementOffset.top - elementScrollTop;
    var expandPosition = $(".list-wrapper").offset();
    var expandTop = expandPosition.top;
    var expandLeft = expandPosition.left;
    var expandWidth = $(".list-wrapper").outerWidth();
    var expandHeight = $(".list-wrapper").outerHeight();

    $(".list-wrapper").css({
      top: netOffset,
      position: "fixed",
      overflow: "hidden",
      "z-index": "11"
    });

    // convert the expand-item to fixed position without moving it
    elementToExpand.css({
      top: elementToExpand.offset().top - $("body").scrollTop(),
      left: elementToExpand.offset().left,
      height: elementToExpand.height(),
      width: elementToExpand.width(),
      "max-width": expandWidth,
      position: "fixed"
    });
    
    // Changes height of banner
    var expandedHeight = elementToExpand.find(".banner").data("height-expanded");
    elementToExpand.find(".banner").animate(
      {
        height: expandedHeight
      },
      expandingAnimationTiming,
      "easeOutBack"
    );
    
    // Changes position of content
    var expandedPosition = elementToExpand
      .find(".inner-content")
      .data("position-expanded");
    elementToExpand.find(".inner-content").animate(
      {
        top: expandedPosition
      },
      expandingAnimationTiming,
      "easeOutBack"
    );

    // start expand-item animation to the expand wrapper
    // expand the element with class .about-tile-bg-image
    elementToExpand.animate(
      {
        left: expandLeft,
        top: expandTop,
        height: expandHeight,
        width: expandWidth,
        "max-width": expandWidth
      },
      expandingAnimationTiming, // animation timing in millisecs
      "easeOutBack", //animation easing
      function() {
        elementToExpand.css({
          right: 0,
          bottom: 0,
          width: "auto",
          height: "auto"
        });

        elementToExpand.find(".banner-holder").css({
          position: "fixed"
        });
      }
    );
  }

  /* Function to collapse cards */
  function collapseElement(collapseButton) {
    // find the element to collapse
    var elementToCollpseParent = collapseButton.parents(".card");
    var elementToCollpse = elementToCollpseParent.find(".card-content");
    
    // find the location of the placeholder
    var elementToCollpsePlaceholder = elementToCollpse.parents(".card");
    var elementToCollpsePlaceholderTop =
      elementToCollpsePlaceholder.offset().top - $("body").scrollTop();
    var elementToCollpsePlaceholderLeft = elementToCollpsePlaceholder.offset()
      .left;
    var elementToCollpsePlaceholderHeight = elementToCollpsePlaceholder.outerHeight();
    var elementToCollpsePlaceholderWidth = elementToCollpsePlaceholder.outerWidth();

    elementToCollpse.find(".banner-holder").css({
      position: "absolute"
    });

    // convert the width and height to numeric values
    elementToCollpse.css({
      right: "auto",
      bottom: "auto",
      width: elementToCollpse.outerWidth(),
      height: elementToCollpse.outerHeight()
    });

    $(".list-wrapper").css({
      position: "absolute",
      overflow: "auto",
      "z-index": "1"
    });
    
    // Changes height of banner
    var collapsedHeight = elementToCollpse.find(".banner").data("height");
    elementToCollpse.find(".banner").animate(
      {
        height: collapsedHeight
      },
      collapsingAnimationTiming,
      "linear"
    );
    
    // Changes position of content
    var collapsedPosition = elementToCollpse
      .find(".inner-content")
      .data("position");
    elementToCollpse.find(".inner-content").animate(
      {
        top: collapsedPosition
      },
      collapsingAnimationTiming,
      "linear"
    );

    elementToCollpse.animate(
      {
        left: elementToCollpsePlaceholderLeft,
        top: elementToCollpsePlaceholderTop,
        height: elementToCollpsePlaceholderHeight,
        width: elementToCollpsePlaceholderWidth
      },
      collapsingAnimationTiming, // animation timing in millisecs
      "linear", //animation easing
      function() {
        // Removes class 'open'
        elementToCollpseParent.removeClass("open");

        elementToCollpse.css({
          position: "relative",
          top: "auto",
          left: "auto",
          width: "100%",
          height: "100%"
        });
      }
    );

    // Stops preventing 'body' scroll
    $("body").removeClass("lock");
  }

  function setCardHeight() {
    $(".card ").each(function(index, element) {
      var slideHeight = $(element)
        .find(".banner-holder")
        .outerHeight();
      var containerHeight = $(element)
        .find(".inner-content")
        .outerHeight();
      var contentHeight = slideHeight + containerHeight;

      $(element).css({
        height: contentHeight
      });
    });
  }

  function attachListeners() {
    $(document)
      .on("click", ".card-content", function() {
        if (
          $(this)
            .parents(".card")
            .hasClass("open")
        ) {
          return;
        }
        expandElement($(this));
      })
      .on("click", ".card .close-btn", function(event) {
        event.stopPropagation();
        collapseElement($(this));
      })
      .on('touchstart', '.card', function() {
        $(this).addClass('hover');
      })
      .on('touchend touchmove touchcancel', '.card', function() {
        $(this).removeClass('hover');
      });
  }

  function initialiseCards() {
    attachListeners();
    setCardHeight();
  }

  initialiseCards();


  //--------------------------[ Web Page Arsenal ]----------------------------------


    $( ".searchInput" ).on( 'keyup', function() {

      var value = $( this ).val().toLowerCase();

      $( '.searchApp' ).filter( function() {

        $( '.cards-list' ).css( 'height', $( '.app-section-content' ).height() );

        $( this ).toggle( $( this ).text().toLowerCase().indexOf( value ) > -1 )

      });

    });

    $( '.btn-comment' ).click( function() {

      alert( 'You must download application to leave review!' );

    });

    $( '.btn-install' ).click( function() {

      $( this ).fadeOut( function() { 

        var head_progress = $( this ).parent().find('.progress2');

        var app_name     = $( this ).attr( 'data-name' );
        var app_ios      = $( this ).attr( 'data-ios' );
        var app_android  = $( this ).attr( 'data-android' );


        $( this ).parent().find('.progress2').fadeIn();


        setTimeout( function() {

           head_progress.attr( 'data-percentage', '10' );


          setTimeout( function() {

             head_progress.attr( 'data-percentage', '15' );


            setTimeout( function() {

               head_progress.attr( 'data-percentage', '25' );


              setTimeout( function() {

                 head_progress.attr( 'data-percentage', '40' );


                setTimeout( function() {

                   head_progress.attr( 'data-percentage', '65' );

                  setTimeout( function() {

                     head_progress.animateCss( 'pulse infinite' );

                     setTimeout( function() {

                        var isMobile = {
                          Android: function() {
                              return navigator.userAgent.match(/Android/i);
                          },
                          BlackBerry: function() {
                              return navigator.userAgent.match(/BlackBerry/i);
                          },
                          iOS: function() {
                              return navigator.userAgent.match(/iPhone|iPad|iPod/i);
                          },
                          Opera: function() {
                              return navigator.userAgent.match(/Opera Mini/i);
                          },
                          Windows: function() {
                              return navigator.userAgent.match(/IEMobile/i) || navigator.userAgent.match(/WPDesktop/i);
                          },
                          any: function() {
                              return (isMobile.Android() || isMobile.BlackBerry() || isMobile.iOS() || isMobile.Opera() || isMobile.Windows());
                          }
                      };

                      if( isMobile.iOS ) {

                          window.location.href = app_ios;

                        } else {

                          window.location.href = app_android;

                        }


                     }, 2000 );


                  }, 2000 );

                }, 4000 );

              }, 2500 );


            }, 1500 );

          }, 2500 );

        }, 2500 );

      } );

  } );

 });










